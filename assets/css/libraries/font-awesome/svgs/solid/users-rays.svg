import discord
from discord.ext import commands
from discord import app_commands
import aiohttp
import asyncio
import logging
from urllib.parse import urlparse


class UnshortenCommand(commands.Cog):
    def __init__(self, bot):
        self.bot = bot

    async def unshorten_url(self, url):
        try:
            async with aiohttp.ClientSession() as session:
                # Use a free unshortening service
                async with session.get(
                    f"http://x.datasig.io/shorturl?url={url}", timeout=10
                ) as response:
                    if response.status == 200:
                        data = await response.json()
                        return data.get("resolved_url", url)
                    return url
        except:
            return url

    async def follow_redirects(self, url):
        try:
            async with aiohttp.ClientSession() as session:
                async with session.get(url, allow_redirects=True) as response:
                    return str(response.url)
        except:
            return url

    @app_commands.command(
        name="unshorten", description="Follow URL redirects to reveal final destination"
    )
    @app_commands.describe(url="The shortened URL to unshorten")
    async def unshorten(self, interaction: disc